/*
    Miden Engine, the real one. Built with OpenGL and SDL
    Copyright (C) 2017 Scott Winkelmann <scottlandart@gmail.com>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#version 330

layout (location = 0) in vec3 position;
layout (location = 1) in vec3 normal;
layout (location = 2) in vec2 texCoord;

out vec3 fsNormal;
out vec3 fsViewNormal;
out vec2 fsTexCoord;
out vec3 fsWorldPos;

uniform mat4 projection;
uniform mat4 view;
uniform mat4 model;

void main()
{
    mat4 mvp = projection * view * model;

    fsNormal = normalize((projection * model * vec4(normal,0.)).xyz);
    fsViewNormal = normalize((mvp * vec4(normal,0.)).xyz);
    fsTexCoord = vec2(texCoord.x,1-texCoord.y);
    fsWorldPos = (projection * model * vec4(position,1.)).xyz;

    gl_Position = mvp * vec4(position,1.);
}

